/**
 * Personal Information Hub
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['js/pih/client/ApiClient', 'js/pih/client/model/IndexedItem', 'js/pih/client/model/SearchResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/IndexedItem'), require('../model/SearchResult'));
  } else {
    // Browser globals (root is window)
    if (!root.PersonalInformationHub) {
      root.PersonalInformationHub = {};
    }
    root.PersonalInformationHub.DataApi = factory(root.PersonalInformationHub.ApiClient, root.PersonalInformationHub.IndexedItem, root.PersonalInformationHub.SearchResult);
  }
}(this, function(ApiClient, IndexedItem, SearchResult) {
  'use strict';

  /**
   * Data service.
   * @module js/pih/client/api/DataApi
   * @version 0.0.1
   */

  /**
   * Constructs a new DataApi. 
   * @alias module:js/pih/client/api/DataApi
   * @class
   * @param {module:js/pih/client/ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:js/pih/client/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the callDelete operation.
     * @callback module:js/pih/client/api/DataApi~callDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a doc
     * 
     * @param {String} t Authorization Token
     * @param {String} r Resources
     * @param {module:js/pih/client/api/DataApi~callDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.callDelete = function(t, r, callback) {
      var postBody = null;

      // verify the required parameter 't' is set
      if (t == undefined || t == null) {
        throw "Missing the required parameter 't' when calling callDelete";
      }

      // verify the required parameter 'r' is set
      if (r == undefined || r == null) {
        throw "Missing the required parameter 'r' when calling callDelete";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        't': t,
        'r': r
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/data/index', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the index operation.
     * @callback module:js/pih/client/api/DataApi~indexCallback
     * @param {String} error Error message, if any.
     * @param {module:js/pih/client/model/IndexedItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Index a file
     * 
     * @param {File} file File to index
     * @param {String} t Authorization Token
     * @param {Object} opts Optional parameters
     * @param {String} opts.comments Comments
     * @param {Array.<String>} opts.r Resources
     * @param {module:js/pih/client/api/DataApi~indexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:js/pih/client/model/IndexedItem}
     */
    this.index = function(file, t, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'file' is set
      if (file == undefined || file == null) {
        throw "Missing the required parameter 'file' when calling index";
      }

      // verify the required parameter 't' is set
      if (t == undefined || t == null) {
        throw "Missing the required parameter 't' when calling index";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        't': t,
        'r': opts['r']
      };
      var formParams = {
        'file': file,
        'comments': opts['comments']
      };

      var authNames = [];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = IndexedItem;

      return this.apiClient.callApi(
        '/data/index', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the indexURL operation.
     * @callback module:js/pih/client/api/DataApi~indexURLCallback
     * @param {String} error Error message, if any.
     * @param {module:js/pih/client/model/IndexedItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Index a url
     * 
     * @param {String} t Authorization Token
     * @param {Object} opts Optional parameters
     * @param {String} opts.comments Comments
     * @param {String} opts.url URL
     * @param {Array.<String>} opts.r Resources
     * @param {module:js/pih/client/api/DataApi~indexURLCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:js/pih/client/model/IndexedItem}
     */
    this.indexURL = function(t, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 't' is set
      if (t == undefined || t == null) {
        throw "Missing the required parameter 't' when calling indexURL";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        't': t,
        'r': opts['r']
      };
      var formParams = {
        'comments': opts['comments'],
        'url': opts['url']
      };

      var authNames = [];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = IndexedItem;

      return this.apiClient.callApi(
        '/data/indexurl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the list operation.
     * @callback module:js/pih/client/api/DataApi~listCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} t Authorization Token
     * @param {Object} opts Optional parameters
     * @param {String} opts.r Resources
     * @param {String} opts.p Pagination in pageNum_pageSize format
     * @param {module:js/pih/client/api/DataApi~listCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.list = function(t, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 't' is set
      if (t == undefined || t == null) {
        throw "Missing the required parameter 't' when calling list";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
        't': t,
        'r': opts['r'],
        'p': opts['p']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/data/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the search operation.
     * @callback module:js/pih/client/api/DataApi~searchCallback
     * @param {String} error Error message, if any.
     * @param {module:js/pih/client/model/SearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Full text search
     * 
     * @param {String} k Keywords
     * @param {String} t Authorization Token
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.r Resources in rTyperId format
     * @param {String} opts.p Pagination in pageNum_pageSize format
     * @param {module:js/pih/client/api/DataApi~searchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:js/pih/client/model/SearchResult}
     */
    this.search = function(k, t, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'k' is set
      if (k == undefined || k == null) {
        throw "Missing the required parameter 'k' when calling search";
      }

      // verify the required parameter 't' is set
      if (t == undefined || t == null) {
        throw "Missing the required parameter 't' when calling search";
      }


      var pathParams = {
      };
      var queryParams = {
        'k': k
      };
      var headerParams = {
        't': t,
        'r': opts['r'],
        'p': opts['p']
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = SearchResult;

      return this.apiClient.callApi(
        '/data/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
